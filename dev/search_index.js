var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = TechnicalIndicatorCharts","category":"page"},{"location":"#TechnicalIndicatorCharts","page":"Home","title":"TechnicalIndicatorCharts","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for TechnicalIndicatorCharts.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [TechnicalIndicatorCharts]","category":"page"},{"location":"#TechnicalIndicatorCharts.abbrev-Tuple{Dates.Period}","page":"Home","title":"TechnicalIndicatorCharts.abbrev","text":"abbrev(p::Period)\n\nReturn an abbreviated string representation of the given period.\n\nExample\n\nabbrev(Hour(4)) # \"4h\"\nabbrev(Day(1))  # \"1d\"\n\n\n\n\n\n","category":"method"},{"location":"#TechnicalIndicatorCharts.chart-Tuple{Any, Any}","page":"Home","title":"TechnicalIndicatorCharts.chart","text":"  chart(name, tf; indicators, visuals)\n\nConstruct a Chart instance configured with the given indicators and visual parameters.\n\nExample\n\njulia> golden_cross = chart(\n    \"BTCUSD\", Hour(4);\n    indicators = [\n        SMA{Float64}(;period=50),\n        SMA{Float64}(;period=200)\n    ],\n    visuals = [\n        Dict(\n            :label_name => \"SMA 50\",\n            :line_color => \"#E072A4\",\n            :line_width => 2\n        ),\n        Dict(\n            :label_name => \"SMA 200\",\n            :line_color => \"#3D3B8E\",\n            :line_width => 5\n        )\n    ]\n)\n\n\n\n\n\n","category":"method"},{"location":"#TechnicalIndicatorCharts.indicator_fields-Tuple{OnlineTechnicalIndicators.TechnicalIndicatorSingleOutput}","page":"Home","title":"TechnicalIndicatorCharts.indicator_fields","text":"Return a tuple of symbol names to be used for the output of ind.\n\n\n\n\n\n","category":"method"},{"location":"#TechnicalIndicatorCharts.indicator_fields_values-Tuple{OnlineTechnicalIndicators.TechnicalIndicatorMultiOutput}","page":"Home","title":"TechnicalIndicatorCharts.indicator_fields_values","text":"Extract values from an indicator instance.\n\n\n\n\n\n","category":"method"},{"location":"#TechnicalIndicatorCharts.ismultiinput-Tuple{OnlineTechnicalIndicators.TechnicalIndicator}","page":"Home","title":"TechnicalIndicatorCharts.ismultiinput","text":"This is a wrapper around OnlineTechnicalIndicators.ismultiinput that takes any instance of a TechnicalIndicator and digs out its unparametrized type before running the original ismultiinput method.\n\n\n\n\n\n","category":"method"},{"location":"#TechnicalIndicatorCharts.ismultioutput-Tuple{OnlineTechnicalIndicators.TechnicalIndicator}","page":"Home","title":"TechnicalIndicatorCharts.ismultioutput","text":"This is a wrapper around OnlineTechnicalIndicators.ismultioutput that takes any instance of a TechnicalIndicator and digs out its unparametrized type before running the original ismultioutput method.\n\n\n\n\n\n","category":"method"},{"location":"#TechnicalIndicatorCharts.merge_candle!-Tuple{Union{Missing, Candle}, Union{Candle, DataFrames.DataFrameRow}}","page":"Home","title":"TechnicalIndicatorCharts.merge_candle!","text":"merge_candle!(last_candle, c)\n\nIf last candle is not provided, construct a new candle with the given OHLCV data. If last candle is provided, mutate lastcandle such that it's HLCV are updated. It's assumed that lastcandle and c have the same timestamp.\n\n\n\n\n\n","category":"method"},{"location":"#TechnicalIndicatorCharts.push_new_candle!-Tuple{Chart, Candle}","page":"Home","title":"TechnicalIndicatorCharts.push_new_candle!","text":"This is meant to be called on timeframe boundaries to onto the chart's dataframe.  It also does indicator calculation at this time.\n\n\n\n\n\n","category":"method"},{"location":"#TechnicalIndicatorCharts.update_last_candle!-Tuple{Chart, Candle}","page":"Home","title":"TechnicalIndicatorCharts.update_last_candle!","text":"This is for internal housekeeping inside chart.candle. This happens when we're away from a chart.tf boundary. This doesn't go into a DataFrame.\n\n\n\n\n\n","category":"method"},{"location":"#TechnicalIndicatorCharts.visualize-Tuple{Any, Any, DataFrames.DataFrame}","page":"Home","title":"TechnicalIndicatorCharts.visualize","text":"visualize(any::Any)\n\nThis is a visualize method that's a catch-all for indicators that haven't had a visualize method made for them yet.  For now, it returns an empty panel.\n\n\n\n\n\n","category":"method"},{"location":"#TechnicalIndicatorCharts.visualize-Tuple{Chart}","page":"Home","title":"TechnicalIndicatorCharts.visualize","text":"visualize(chart::Chart)\n\nReturn an LWCLayout that visualizes all the components in chart appropriately.\n\n\n\n\n\n","category":"method"},{"location":"#TechnicalIndicatorCharts.visualize-Tuple{OnlineTechnicalIndicators.SMA, Any, DataFrames.DataFrame}","page":"Home","title":"TechnicalIndicatorCharts.visualize","text":"visualize(sma::SMA)\n\nReturn an lwc_line for visualizing an SMA indicator.\n\n\n\n\n\n","category":"method"}]
}
